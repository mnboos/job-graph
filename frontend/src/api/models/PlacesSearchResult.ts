/* tslint:disable */
/* eslint-disable */
/**
 * NinjaAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FeatureProperties } from './FeatureProperties';
import {
    FeaturePropertiesFromJSON,
    FeaturePropertiesFromJSONTyped,
    FeaturePropertiesToJSON,
    FeaturePropertiesToJSONTyped,
} from './FeatureProperties';
import type { Geometry } from './Geometry';
import {
    GeometryFromJSON,
    GeometryFromJSONTyped,
    GeometryToJSON,
    GeometryToJSONTyped,
} from './Geometry';

/**
 * 
 * @export
 * @interface PlacesSearchResult
 */
export interface PlacesSearchResult {
    /**
     * 
     * @type {Geometry}
     * @memberof PlacesSearchResult
     */
    geometry: Geometry;
    /**
     * 
     * @type {FeatureProperties}
     * @memberof PlacesSearchResult
     */
    properties: FeatureProperties;
    /**
     * 
     * @type {boolean}
     * @memberof PlacesSearchResult
     */
    showCanton: boolean;
}

/**
 * Check if a given object implements the PlacesSearchResult interface.
 */
export function instanceOfPlacesSearchResult(value: object): value is PlacesSearchResult {
    if (!('geometry' in value) || value['geometry'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    if (!('showCanton' in value) || value['showCanton'] === undefined) return false;
    return true;
}

export function PlacesSearchResultFromJSON(json: any): PlacesSearchResult {
    return PlacesSearchResultFromJSONTyped(json, false);
}

export function PlacesSearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlacesSearchResult {
    if (json == null) {
        return json;
    }
    return {
        
        'geometry': GeometryFromJSON(json['geometry']),
        'properties': FeaturePropertiesFromJSON(json['properties']),
        'showCanton': json['show_canton'],
    };
}

export function PlacesSearchResultToJSON(json: any): PlacesSearchResult {
    return PlacesSearchResultToJSONTyped(json, false);
}

export function PlacesSearchResultToJSONTyped(value?: PlacesSearchResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'geometry': GeometryToJSON(value['geometry']),
        'properties': FeaturePropertiesToJSON(value['properties']),
        'show_canton': value['showCanton'],
    };
}

